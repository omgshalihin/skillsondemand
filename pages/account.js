/* eslint-disable max-len */
/* eslint-disable @next/next/no-img-element */
import React, { useEffect, useState } from 'react';
import {
  useSession, getSession, signIn, signOut,
} from 'next-auth/react';
import Link from 'next/link';
import {
  Tabs, Button, Card, Navbar, Dropdown, Avatar,
} from 'flowbite-react';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Account.module.css';
import navStyles from '../styles/Navbar.module.css';
import Footer from '../components/Footer';

export const getServerSideProps = async context => {
  const session = await getSession(context);

  if (!session) {
    return {
      redirect: {
        destination: '/login',
      },
    };
  }

  return {
    props: { session },
  };
};

// eslint-disable-next-line consistent-return
const Account = () => {
  const { data: session, status } = useSession();
  const [databaseData, setDatabaseData] = useState({});

  useEffect(() => {
    if (session) {
      const user = {
        userName: session.user.name,
        userEmail: session.user.email,
        userImage: session.user.image,
      };

      fetch('https://safe-hire-me.azurewebsites.net/api/users/', {
        method: 'POST',
        mode: 'cors',
        body: JSON.stringify(user),
        headers: {
          'Content-type': 'application/json; charset=UTF-8',
        },
      }).then(data => data.json())
        .then(res => setDatabaseData(res));
    }
  }, [session]);

  console.log(session);

  if (status === 'authenticated') {
    return (
      <div>
        <Head>
          <title>HireMe | My Account</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/HireMeHeadNew-light.png" />
        </Head>

        <main className={styles.account}>
          <Tabs.Group
            aria-label="Tabs with underline"
            className="justify-center align-middle profile"
          // eslint-disable-next-line react/style-prop-object
            style="underline">
            <Tabs.Item active title="Profile">

              <Card className={styles.latestServices}>

                <div className="flex flex-col justify-center align-middle items-center gap-4 px-1 py-1">
                  <h5 className="text-2xl">
                    Welcome,
                    {' '}
                    {databaseData.userName}
                    !
                  </h5>

                  <Image src={session.user.image} width={150} height={150} alt="profile-google" className="rounded-full" />

                </div>
                <div className="flex flex-col items-center">
                  <div className="flex items-center space-x-4">
                    <div className="min-w-0 flex-1">
                      <p className="truncate text-sm text-gray-500 dark:text-gray-400 text-center">
                        {databaseData.userEmail}
                      </p>
                      <p className="truncate text-sm text-gray-500 dark:text-gray-400 text-center">
                        {databaseData.userAddress}
                      </p>
                    </div>
                  </div>
                </div>
                <div className="flex flex-col items-center">
                  <Button>
                    <Link href="/editAccount" className="max-w-sm">Edit profile</Link>
                  </Button>
                </div>
              </Card>
            </Tabs.Item>
            <Tabs.Item
              title="History">
              <Card className={styles.latestServices}>
                <div className="mb-4 flex items-center justify-between">
                  <h5 className="text-xl font-bold leading-none text-gray-900 dark:text-white">
                    Latest Services
                  </h5>
                </div>
                {databaseData.userHistory
              && databaseData.userHistory.map(history => (
                <div key={history.historyId} className="flow-root">
                  <ul className="divide-y divide-gray-200 dark:divide-gray-700">
                    <li className="py-3 sm:py-4">
                      <div className="flex space-x-4">
                        <div className="shrink-0">
                          <img
                            className="h-8 w-8 rounded-full"
                            alt={history.professionalName}
                            src={history.professionalImage} />
                        </div>
                        <div className="min-w-0 flex-1">
                          <p className="truncate text-sm font-medium text-gray-900 dark:text-white">
                            {history.professionalName}
                          </p>
                          <p className="truncate text-sm text-gray-500 dark:text-gray-400">
                            {history.professionalService}
                          </p>
                        </div>
                        <div className="inline-flex items-center text-base font-semibold text-gray-900 dark:text-white">
                          {history.totalServicePrice}
                          {' '}
                          kr SEK
                        </div>
                      </div>
                    </li>
                  </ul>
                </div>

              ))}
              </Card>
            </Tabs.Item>
          </Tabs.Group>
        </main>
        <nav className={navStyles.bottomNav}>
          <div className={navStyles.bottomNavLinks}>
            <Navbar.Link
              href="/">
              Home
            </Navbar.Link>
            <Navbar.Link href="/about">
              About
            </Navbar.Link>
            <Navbar.Link href="/contact">
              Contact
            </Navbar.Link>
          </div>
          <div className={navStyles.bottomNavProfile}>
            {session ? (
              <div className="flex md:order-2">
                <Dropdown
                  arrowIcon={false}
                  inline
                  label={<Avatar alt="User settings" img={session.user.image} rounded />}>
                  <Dropdown.Header>
                    <span className="block text-sm">
                      {session.user.name}
                    </span>
                    <span className="block truncate text-sm font-medium">
                      {session.user.email}
                    </span>
                  </Dropdown.Header>
                  <Dropdown.Item>
                    <Link href="/account">My Account</Link>
                  </Dropdown.Item>
                  <Dropdown.Divider />
                  <Dropdown.Item onClick={() => signOut()}>
                    Sign out
                  </Dropdown.Item>
                </Dropdown>
              </div>
            ) : <Link href="/login" onClick={() => signIn()}>Login</Link>}
          </div>
        </nav>
        <div className={navStyles.bottomFooter}>
          <Footer />
        </div>
      </div>
    );
  }
};

export default Account;
